package com.comvee.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.comvee.hospitalabbott.bean.MemberModel;
import com.comvee.hospitalabbott.bean.RefreshHistoryModel;
import com.comvee.hospitalabbott.bean.ParamLogListBean;
import com.comvee.hospitalabbott.bean.DepartmentModel;
import com.comvee.hospitalabbott.bean.TestPaperModel;
import com.comvee.hospitalabbott.bean.TestInfo;
import com.comvee.hospitalabbott.bean.QualityBean;
import com.comvee.hospitalabbott.bean.RecordBean;
import com.comvee.hospitalabbott.bean.QualityResultBean;
import com.comvee.hospitalabbott.bean.MemberHistoryBean;
import com.comvee.hospitalabbott.bean.BloodRangeBean;

import com.comvee.greendao.gen.MemberModelDao;
import com.comvee.greendao.gen.RefreshHistoryModelDao;
import com.comvee.greendao.gen.ParamLogListBeanDao;
import com.comvee.greendao.gen.DepartmentModelDao;
import com.comvee.greendao.gen.TestPaperModelDao;
import com.comvee.greendao.gen.TestInfoDao;
import com.comvee.greendao.gen.QualityBeanDao;
import com.comvee.greendao.gen.RecordBeanDao;
import com.comvee.greendao.gen.QualityResultBeanDao;
import com.comvee.greendao.gen.MemberHistoryBeanDao;
import com.comvee.greendao.gen.BloodRangeBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig memberModelDaoConfig;
    private final DaoConfig refreshHistoryModelDaoConfig;
    private final DaoConfig paramLogListBeanDaoConfig;
    private final DaoConfig departmentModelDaoConfig;
    private final DaoConfig testPaperModelDaoConfig;
    private final DaoConfig testInfoDaoConfig;
    private final DaoConfig qualityBeanDaoConfig;
    private final DaoConfig recordBeanDaoConfig;
    private final DaoConfig qualityResultBeanDaoConfig;
    private final DaoConfig memberHistoryBeanDaoConfig;
    private final DaoConfig bloodRangeBeanDaoConfig;

    private final MemberModelDao memberModelDao;
    private final RefreshHistoryModelDao refreshHistoryModelDao;
    private final ParamLogListBeanDao paramLogListBeanDao;
    private final DepartmentModelDao departmentModelDao;
    private final TestPaperModelDao testPaperModelDao;
    private final TestInfoDao testInfoDao;
    private final QualityBeanDao qualityBeanDao;
    private final RecordBeanDao recordBeanDao;
    private final QualityResultBeanDao qualityResultBeanDao;
    private final MemberHistoryBeanDao memberHistoryBeanDao;
    private final BloodRangeBeanDao bloodRangeBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        memberModelDaoConfig = daoConfigMap.get(MemberModelDao.class).clone();
        memberModelDaoConfig.initIdentityScope(type);

        refreshHistoryModelDaoConfig = daoConfigMap.get(RefreshHistoryModelDao.class).clone();
        refreshHistoryModelDaoConfig.initIdentityScope(type);

        paramLogListBeanDaoConfig = daoConfigMap.get(ParamLogListBeanDao.class).clone();
        paramLogListBeanDaoConfig.initIdentityScope(type);

        departmentModelDaoConfig = daoConfigMap.get(DepartmentModelDao.class).clone();
        departmentModelDaoConfig.initIdentityScope(type);

        testPaperModelDaoConfig = daoConfigMap.get(TestPaperModelDao.class).clone();
        testPaperModelDaoConfig.initIdentityScope(type);

        testInfoDaoConfig = daoConfigMap.get(TestInfoDao.class).clone();
        testInfoDaoConfig.initIdentityScope(type);

        qualityBeanDaoConfig = daoConfigMap.get(QualityBeanDao.class).clone();
        qualityBeanDaoConfig.initIdentityScope(type);

        recordBeanDaoConfig = daoConfigMap.get(RecordBeanDao.class).clone();
        recordBeanDaoConfig.initIdentityScope(type);

        qualityResultBeanDaoConfig = daoConfigMap.get(QualityResultBeanDao.class).clone();
        qualityResultBeanDaoConfig.initIdentityScope(type);

        memberHistoryBeanDaoConfig = daoConfigMap.get(MemberHistoryBeanDao.class).clone();
        memberHistoryBeanDaoConfig.initIdentityScope(type);

        bloodRangeBeanDaoConfig = daoConfigMap.get(BloodRangeBeanDao.class).clone();
        bloodRangeBeanDaoConfig.initIdentityScope(type);

        memberModelDao = new MemberModelDao(memberModelDaoConfig, this);
        refreshHistoryModelDao = new RefreshHistoryModelDao(refreshHistoryModelDaoConfig, this);
        paramLogListBeanDao = new ParamLogListBeanDao(paramLogListBeanDaoConfig, this);
        departmentModelDao = new DepartmentModelDao(departmentModelDaoConfig, this);
        testPaperModelDao = new TestPaperModelDao(testPaperModelDaoConfig, this);
        testInfoDao = new TestInfoDao(testInfoDaoConfig, this);
        qualityBeanDao = new QualityBeanDao(qualityBeanDaoConfig, this);
        recordBeanDao = new RecordBeanDao(recordBeanDaoConfig, this);
        qualityResultBeanDao = new QualityResultBeanDao(qualityResultBeanDaoConfig, this);
        memberHistoryBeanDao = new MemberHistoryBeanDao(memberHistoryBeanDaoConfig, this);
        bloodRangeBeanDao = new BloodRangeBeanDao(bloodRangeBeanDaoConfig, this);

        registerDao(MemberModel.class, memberModelDao);
        registerDao(RefreshHistoryModel.class, refreshHistoryModelDao);
        registerDao(ParamLogListBean.class, paramLogListBeanDao);
        registerDao(DepartmentModel.class, departmentModelDao);
        registerDao(TestPaperModel.class, testPaperModelDao);
        registerDao(TestInfo.class, testInfoDao);
        registerDao(QualityBean.class, qualityBeanDao);
        registerDao(RecordBean.class, recordBeanDao);
        registerDao(QualityResultBean.class, qualityResultBeanDao);
        registerDao(MemberHistoryBean.class, memberHistoryBeanDao);
        registerDao(BloodRangeBean.class, bloodRangeBeanDao);
    }
    
    public void clear() {
        memberModelDaoConfig.clearIdentityScope();
        refreshHistoryModelDaoConfig.clearIdentityScope();
        paramLogListBeanDaoConfig.clearIdentityScope();
        departmentModelDaoConfig.clearIdentityScope();
        testPaperModelDaoConfig.clearIdentityScope();
        testInfoDaoConfig.clearIdentityScope();
        qualityBeanDaoConfig.clearIdentityScope();
        recordBeanDaoConfig.clearIdentityScope();
        qualityResultBeanDaoConfig.clearIdentityScope();
        memberHistoryBeanDaoConfig.clearIdentityScope();
        bloodRangeBeanDaoConfig.clearIdentityScope();
    }

    public MemberModelDao getMemberModelDao() {
        return memberModelDao;
    }

    public RefreshHistoryModelDao getRefreshHistoryModelDao() {
        return refreshHistoryModelDao;
    }

    public ParamLogListBeanDao getParamLogListBeanDao() {
        return paramLogListBeanDao;
    }

    public DepartmentModelDao getDepartmentModelDao() {
        return departmentModelDao;
    }

    public TestPaperModelDao getTestPaperModelDao() {
        return testPaperModelDao;
    }

    public TestInfoDao getTestInfoDao() {
        return testInfoDao;
    }

    public QualityBeanDao getQualityBeanDao() {
        return qualityBeanDao;
    }

    public RecordBeanDao getRecordBeanDao() {
        return recordBeanDao;
    }

    public QualityResultBeanDao getQualityResultBeanDao() {
        return qualityResultBeanDao;
    }

    public MemberHistoryBeanDao getMemberHistoryBeanDao() {
        return memberHistoryBeanDao;
    }

    public BloodRangeBeanDao getBloodRangeBeanDao() {
        return bloodRangeBeanDao;
    }

}
